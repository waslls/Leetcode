#创建m行n列的dp矩阵，dp[i][j]为到达i行j列的路径数，初始化第一行和第一列都是1，递推公式为dp[i][j] = dp[i][j-1] + dp[i-1][j],返回右下角元素即可
def uniquePaths(self, m: int, n: int) -> int:
      re = [[0 for _ in range(n)] for _ in range(m)]
      re[0][:],re[:][0] = [1 for _ in range(n)],[1 for _ in range(m)]
      for i in range(m):
          for j in range(n):
              if re[i][j] == 0:
                  re[i][j] = re[i][j-1] + re[i-1][j]
      return re[m-1][n-1]

#更简易版：dp矩阵只用一行，更新时dp[j] = dp[j-1] + dp[j]
def uniquePaths(self, m: int, n: int) -> int:
      re = [1 for _ in range(n)]
      for i in range(m-1):
          for j in range(1,n):
                  re[j] = re[j-1] + re[j]
      return re[-1]

