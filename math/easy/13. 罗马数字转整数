#哈希表存储 且遍历字符时遇到s[i:i+1]在哈希表中(即遇到4 40 9 90 400 900)，就给结果加上哈希表中s[i:i+1]对应数(要使下一次遍历的字符跳过，不然多加)，反之只加上哈希表中s[i]对应的数
def romanToInt(self, s: str) -> int:
        re = 0
        haxi = {'IV':4,'IX':9,'XL':40,'XC':90,'CD':400,'CM':900,'C':100,'D':500,'M':1000,'I':1,'V':5,'X':10,'L':50}
        flag = 0
        for i in range(len(s)):
            if flag == 1:
                flag = 0
                continue
            if i+1<len(s) and s[i:i+2] in haxi:
                re += haxi[s[i:i+2]]
                flag = 1
            else:
                re += haxi[s[i]]
        return re
        
#官方：通常情况下，罗马数字中小的数字在大的数字的右边，可以将每个字符视作一个单独的值，累加每个字符对应的数值即可。若存在小的数字在大的数字的左边的情况，根据规则需要减去小的数字
#XXVII 可视作 XXVII=10+10+5+1+1=2
#XIV 可视作 XIV=10−1+5=14。
            

