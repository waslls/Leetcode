#26
#原地删除直接使用del num[i]即可，若使用for循环（判断num[i]==num[i+1]再删），由于删除后数组长度会减小，而for循环的i会不断向前，因此会漏判（自己试下就知道），借助题目标签使用双指针，单指针
#也可以，若相等则删除，但指针不动，若不相等指针都向前移动一位，但是时间很慢9%

#官方：我使用了del所以很慢，官方的双指针很巧妙，快指针遍历所有元素，若nums[fast]！=nums[fast-1]（nums[0]保持原状,从下标1开始删除重复元素）,则出现不同元素，填入到nums[slow]，然后slow+=1，
#即slow表示到现在为止不同元素的个数，最后返回slow即可。
#https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/solution/shan-chu-pai-xu-shu-zu-zhong-de-zhong-fu-tudo/有动图


#27:还是双指针，fast的值若=val，跳过，不等于则赋给slow，fast每次循环都+=1，slow只有被赋值才+=1

#283：还是双指针，fast的值若=0，跳过，不等于则赋给slow，fast每次循环都+=1，slow只有被赋值才+=1，最后把slow后面的都赋为0
#但空间O不好，官方的更好：也是双指针，使用左右指针交换的策略https://leetcode-cn.com/problems/move-zeroes/solution/yi-dong-ling-by-leetcode-solution/在遇到0之前 左右指针同时往右移动，
#遇到0时，右指针一直往右移动直到不是0，然后把左右指针值交换，即把左指针的0和右指针的数交换，然后把左指针后移一位再到第一个0，然后右指针现在指向0，接下来继续移到非0数，继续下去。即左指针
#左边全是非0数，左指针指向第一个0，右指针左边和左指针右边全是0，右指针右边全是未处理的数。1,4,3,5,0(左指针),0,0,0,2(右指针),3,0,7,6
